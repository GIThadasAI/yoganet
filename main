from google.colab import drive
drive.mount('/content/drive')

//!unzip -uq "/content/drive/My Drive/10.zip" -d "/content/drive/My Drive/10"

import tensorflow as tf
from keras import backend as K
import numpy as np
import matplotlib.pyplot as plt
import cv2

//tf.keras.preprocessing.image.load_img(
    path, grayscale=False, color_mode="rgb", target_size=None, interpolation="nearest"
)

data_root='/content/drive/My Drive/train data'

from keras.preprocessing.image import ImageDataGenerator, load_img, img_to_array

train_datagen = ImageDataGenerator(
        rescale=1./255,            # normalize pixel values to [0,1]
     )  

train_generator = train_datagen.flow_from_directory(
    data_root,
    target_size=(300, 300),
    color_mode="grayscale",
    class_mode='binary')
    
image_size = 300 #image.sape
model = tf.keras.Sequential([
    tf.keras.layers.Conv2D(16, kernel_size=(4,4),input_shape=(image_size,image_size,1)),
    tf.keras.layers.MaxPool2D((3,3)),
    tf.keras.layers.Conv2D(32, kernel_size=(4,4)),
    tf.keras.layers.MaxPool2D((3,3)),
    tf.keras.layers.Conv2D(64, kernel_size=(4,4)),
    tf.keras.layers.MaxPool2D((3,3)),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(128, activation=tf.nn.relu),
    # Predict classes probabilities (10 values) 
    tf.keras.layers.Dense(10, activation=tf.nn.softmax)])
model.compile(optimizer='adam', loss='categorical_crossentropy')
model.summary()
history = model.fit_generator(generator=train_generator, epochs=10)
plt.plot(history.history['loss'])
plt.title('MSE Loss')
